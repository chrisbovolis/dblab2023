## This file is ran automatically the first time a Python program imports the package dbdemo
from flask import Flask
from flask_mysqldb import MySQL
from dbdemo.central_op_landing import central_op_landing
from dbdemo.school import school
from dbdemo.operator import operator
from dbdemo.book import book
from dbdemo.user import user
from dbdemo.lending import lending
from dbdemo.lendingsbyschool import lendingsbyschool
from dbdemo.writersbybookcat import writersbybookcat
from dbdemo.teachersbybookcat import teachersbybookcat
from dbdemo.teachersmostlend import teachersmostlend
from dbdemo.writersnolend import writersnolend
from dbdemo.opsamenumlend import opsamenumlend
from dbdemo.topgenre import topgenre
from dbdemo.fivelessthanmax import fivelessthanmax
from dbdemo.op_landing import op_landing
from dbdemo.op_book import op_book
from dbdemo.op_user import op_user
from dbdemo.user_landing import user_landing
from dbdemo.user_book import user_book
from dbdemo.user_lending import user_lending
from dbdemo.user_reservation import user_reservation
from dbdemo.op_lending import op_lending
from dbdemo.op_reservation import op_reservation
from dbdemo.user_review import user_review
from dbdemo.reservation import reservation
from dbdemo.review import review
from dbdemo.op_book_search import op_book_search
from dbdemo.op_not_returned import op_not_returned
from dbdemo.median_review import median_review
from dbdemo.op_edit_mode import edit_mode
from dbdemo.op_review import op_review
from dbdemo.op_buttons import op_buttons
## __name__ is the name of the module. When running directly from python, it will be 'dbdemo'
## Outside of this module, as in run.py, it is '__main__' by default
## Create an instance of the Flask class to be used for request routing
app = Flask(__name__)
## configuration of database
app.config["MYSQL_USER"] = 'root'
app.config["MYSQL_PASSWORD"] = ''
app.config["MYSQL_DB"] = 'demo'
app.config["MYSQL_HOST"] = 'localhost'
app.config["SECRET_KEY"] = 'something' ## secret key for sessions (signed cookies). Flask uses it to protect the contents of the user session against tampering.
app.config["WTF_CSRF_SECRET_KEY"] = '' ## token for csrf protection of forms.
## secret keys can be generated by secrets.token_hex()
## initialize database connection object
db = MySQL(app)
## routes must be imported after the app object has been initialized
from dbdemo import routes
from dbdemo.central_op_landing import routes
from dbdemo.school import routes
from dbdemo.operator import routes
from dbdemo.book import routes
from dbdemo.lendingsbyschool import routes
from dbdemo.user import routes

from dbdemo.lending import routes
from dbdemo.writersbybookcat import routes
from dbdemo.teachersbybookcat import routes
from dbdemo.teachersmostlend import routes
from dbdemo.writersnolend import routes
from dbdemo.opsamenumlend import routes
from dbdemo.topgenre import routes
from dbdemo.fivelessthanmax import routes
from dbdemo.op_landing import routes
from dbdemo.op_book import routes
from dbdemo.op_user import routes
from dbdemo.user_landing import routes
from dbdemo.user_book import routes
from dbdemo.user_lending import routes
from dbdemo.user_reservation import routes
from dbdemo.user_review import routes
from dbdemo.op_lending import routes
from dbdemo.op_reservation import routes
from dbdemo.reservation import routes
from dbdemo.review import routes
from dbdemo.op_book_search import routes
from dbdemo.op_not_returned import routes
from dbdemo.median_review import routes
from dbdemo.op_edit_mode import routes
from dbdemo.op_review import routes
from dbdemo.op_buttons import routes
app.register_blueprint(central_op_landing)
app.register_blueprint(school)
app.register_blueprint(operator)
app.register_blueprint(book)
app.register_blueprint(lendingsbyschool)
app.register_blueprint(writersbybookcat)
app.register_blueprint(teachersbybookcat)
app.register_blueprint(teachersmostlend)
app.register_blueprint(writersnolend)
app.register_blueprint(opsamenumlend)
app.register_blueprint(topgenre)
app.register_blueprint(fivelessthanmax)
app.register_blueprint(user)

app.register_blueprint(lending)
app.register_blueprint(op_landing)
app.register_blueprint(op_book)
app.register_blueprint(op_user)
app.register_blueprint(user_landing)
app.register_blueprint(user_book)
app.register_blueprint(user_lending)
app.register_blueprint(user_reservation)
app.register_blueprint(user_review)
app.register_blueprint(op_lending)
app.register_blueprint(op_reservation)
app.register_blueprint(reservation)
app.register_blueprint(review)
app.register_blueprint(op_book_search)
app.register_blueprint(op_not_returned)
app.register_blueprint(median_review)
app.register_blueprint(edit_mode)
app.register_blueprint(op_review)
app.register_blueprint(op_buttons)
